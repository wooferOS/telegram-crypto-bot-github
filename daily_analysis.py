from openai import OpenAI

client = OpenAI(api_key=OPENAI_API_KEY)

def generate_report():
    account = binance_client.get_account()
    balances = {a['asset']: float(a['free']) for a in account['balances'] if float(a['free']) > 0.0}
    print("üìä BALANCES:", balances)

    sorted_balances = dict(sorted(balances.items(), key=lambda x: x[1], reverse=True))
    total = sum(sorted_balances.values())

    prompt = f"""
üîç –¢–∏ –∫—Ä–∏–ø—Ç–æ–∞–Ω–∞–ª—ñ—Ç–∏–∫. –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –ø–æ—Ä—Ç—Ñ–µ–ª—å: {sorted_balances}
–°—É–º–∞—Ä–Ω–æ: {total:.2f} –º–æ–Ω–µ—Ç.

üìå –ó–∞–≤–¥–∞–Ω–Ω—è:
1. –¢–û–ü-3 –º–æ–Ω–µ—Ç–∏ –∑–∞ –æ–±—Å—è–≥–æ–º.
2. –ß–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—å –Ω–∞–¥—Ç–æ —Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–æ–≤–∞–Ω–∏–π?
3. –©–æ –≤–∞—Ä—Ç–æ –ø—Ä–æ–¥–∞—Ç–∏/–¥–æ–∫—É–ø–∏—Ç–∏?
4. –¢–∞–±–ª–∏—Ü—è Stop-Loss (%).
5. –¢—Ä–∏ –¥—ñ—ó –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ.
"""

    print("üì® PROMPT GPT:", prompt)

    response = client.chat.completions.create(
        model="gpt-4",
        messages=[{"role": "user", "content": prompt}]
    )
    return response.choices[0].message.content.strip()
