import time,hmac,hashlib,requests,sys
from urllib.parse import urlencode
from pathlib import Path

# щоб бачив config_dev3.py в корені репо
sys.path.insert(0, str(Path(__file__).resolve().parents[1]))
from config_dev3 import BINANCE_API_KEY, BINANCE_SECRET_KEY

BASE="https://api.binance.com"
def now(): return int(time.time()*1000)
def sign(q): return hmac.new(BINANCE_SECRET_KEY.encode(), q.encode(), hashlib.sha256).hexdigest()

def post(path,p):
    p=dict(p); p.setdefault("recvWindow",5000); p["timestamp"]=now()
    body=urlencode(p)+"&signature="+sign(urlencode(p))
    return requests.post(BASE+path, data=body,
        headers={"X-MBX-APIKEY":BINANCE_API_KEY,"Content-Type":"application/x-www-form-urlencoded"},
        timeout=15)

def get(path,p):
    p=dict(p); p.setdefault("recvWindow",5000); p["timestamp"]=now()
    qs=urlencode(p)
    return requests.get(BASE+path, params=qs+"&signature="+sign(qs),
        headers={"X-MBX-APIKEY":BINANCE_API_KEY}, timeout=15)

def main():
    if len(sys.argv)<4:
        print("USAGE: python3 tools/convert_now.py FROM_ASSET TO_ASSET AMOUNT [WALLET=SPOT|FUNDING]")
        sys.exit(1)
    fr, to, amount = sys.argv[1], sys.argv[2], sys.argv[3]
    wallet = sys.argv[4] if len(sys.argv)>4 else "SPOT"

    # (опц) перевіримо мін.ліміти для підказки
    ei = get("/sapi/v1/convert/exchangeInfo", {"fromAsset":fr,"toAsset":to}).json()[0]
    print("[exchangeInfo]", ei)

    r = post("/sapi/v1/convert/getQuote", {
        "fromAsset": fr, "toAsset": to, "fromAmount": str(amount), "walletType": wallet
    })
    print("[getQuote]", r.status_code, r.text)
    j = r.json() if r.headers.get("content-type","").startswith("application/json") else {}
    if not isinstance(j,dict) or "quoteId" not in j:
        print("[!] No quoteId — перевір баланс/amount (мін:", ei.get("fromAssetMinAmount"), ")")
        sys.exit(2)

    qid = j["quoteId"]
    r2 = post("/sapi/v1/convert/acceptQuote", {"quoteId": qid})
    print("[acceptQuote]", r2.status_code, r2.text)

    # статус
    time.sleep(1.0)
    st = get("/sapi/v1/convert/orderStatus", {"orderId": r2.json().get("orderId")})
    print("[orderStatus]", st.status_code, st.text)

if __name__=="__main__":
    main()
